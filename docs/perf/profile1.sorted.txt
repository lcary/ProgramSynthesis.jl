2521	./channels.jl:110; (::getfield(Base, Symbol("##597#598")){getfield(DreamCore.Generation, Symbol("##4#6")){Grammar,Bool,DreamCore.Generation.ApplicationState},Channel{Any}})()
2189	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:332; #3
2117	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:372; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
2025	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:174; build_candidates(::Grammar, ::ProgramState)
1716	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:217; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
1223	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:180; apply(::TypeConstructor, ::Context)
958	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:134; get_candidate(::ProgramState, ::DreamCore.Grammars.Production)
954	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:224; instantiate
853	./strings/io.jl:156; string
739	./array.jl:611; collect(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}})
618	./none:0; (::getfield(DreamCore.Types, Symbol("##3#4")){Context})(::DreamCore.Types.TypeVariable)
548	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:139; get_candidate(::ProgramState, ::DreamCore.Grammars.Production)
509	./array.jl:651; collect_to!(::Array{TypeConstructor,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
508	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:135; get_candidate(::ProgramState, ::DreamCore.Grammars.Production)
507	./generator.jl:47; iterate(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64)
467	./array.jl:606; collect(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}})
464	./array.jl:630; collect_to_with_first!(::Array{TypeConstructor,1}, ::TypeConstructor, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64)
463	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:220; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
461	./generator.jl:47; iterate(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}})
421	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:141; show
417	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:181; apply(::TypeConstructor, ::Context)
324	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:197; instantiate
296	./strings/io.jl:123; print_to_string(::DreamCore.Types.TypeVariable)
293	./strings/io.jl:31; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::DreamCore.Types.TypeVariable)
292	./none:0; (::getfield(DreamCore.Types, Symbol("##3#4")){Context})(::TypeConstructor)
290	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:139; tostr
287	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:52; Type
285	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:39; split_arguments(::Array{Union{TypeConstructor, TypeVariable},1})
259	./strings/io.jl:121; print_to_string(::String, ::Vararg{Any,N} where N)
229	./boot.jl:402; Type
222	./channels.jl:395; iterate(::Channel{Any}, ::Nothing)
218	./channels.jl:315; take!
207	./strings/io.jl:123; print_to_string(::String, ::Vararg{Any,N} where N)
202	./channels.jl:394; iterate
188	./array.jl:630; collect_to_with_first!(::Array{DreamCore.Types.TypeVariable,1}, ::DreamCore.Types.TypeVariable, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64)
182	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:380; #8
164	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:275; unify(::Context, ::TypeConstructor, ::TypeConstructor)
145	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:52; TypeConstructor(::String, ::Array{DreamCore.Types.TypeVariable,1})
138	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:39; split_arguments(::Array{DreamCore.Types.TypeVariable,1})
132	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:134; tostr(::TypeConstructor)
131	./strings/io.jl:31; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::TypeConstructor)
127	./generator.jl:47; collect_to!(::Array{DreamCore.Types.TypeVariable,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
125	./boot.jl:411; Type
124	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:362; #7
114	./channels.jl:338; take_unbuffered(::Channel{Any})
111	./event.jl:255; wait()
111	./tuple.jl:63; indexed_iterate
109	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:251; unify(::Context, ::TypeConstructor, ::TypeConstructor)
109	./channels.jl:109; Type
100	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:252; unify(::Context, ::TypeConstructor, ::DreamCore.Types.TypeVariable)
96	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:381; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
92	./channels.jl:327; take_unbuffered(::Channel{Any})
91	./channels.jl:125; check_channel_state
90	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:39; split_arguments(::Array{AbstractType,1})
89	./event.jl:196; try_yieldto(::typeof(Base.ensure_rescheduled), ::Base.RefValue{Task})
82	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:333; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
72	./abstractarray.jl:617; similar
72	./abstractarray.jl:618; similar
71	./strings/io.jl:277; join
71	./strings/io.jl:97; sprint
69	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:52; TypeConstructor(::String, ::Array{TypeConstructor,1})
69	./array.jl:705; iterate
65	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:257; unify(::Context, ::TypeConstructor, ::TypeConstructor)
64	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:52; TypeConstructor(::String, ::Array{AbstractType,1})
64	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:170; apply(::DreamCore.Types.TypeVariable, ::Context)
59	./strings/io.jl:97; #sprint#340(::Nothing, ::Int64, ::Function, ::Function, ::Array{String,1}, ::Vararg{Any,N} where N)
57	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:32; Type
55	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:53; Type
54	./array.jl:606; collect(::Base.Generator{Array{AbstractType,1},typeof(DreamCore.Types.tostr)})
54	./array.jl:474; convert
53	./generator.jl:47; iterate(::Base.Generator{Array{AbstractType,1},typeof(DreamCore.Types.tostr)})
53	./array.jl:482; Type
52	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:380; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
50	./iobuffer.jl:114; #IOBuffer#316(::Bool, ::Bool, ::Nothing, ::Bool, ::Int64, ::Int64, ::Type)
47	./none:0; Type
47	./boot.jl:427; Type
46	./array.jl:598; _array_for
45	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:39; split_arguments(::Array{TypeConstructor,1})
44	./strings/io.jl:118; print_to_string(::String, ::Vararg{Any,N} where N)
43	./strings/io.jl:156; tostr
43	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:53; TypeConstructor(::String, ::Array{DreamCore.Types.TypeVariable,1})
42	./dict.jl:91; Dict{String,DreamCore.Types.TypeVariable}()
39	./sysimg.jl:19; setproperty!(::Task, ::Symbol, ::Nothing)
39	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:215; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
39	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:168; apply(::DreamCore.Types.TypeVariable, ::Context)
37	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:332; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
36	./boot.jl:421; Type
35	./array.jl:812; _growend!
34	./strings/string.jl:71; StringVector
33	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:47; TypeConstructor(::String, ::Array{Union{TypeConstructor, TypeVariable},1}, ::Nothing)
33	./boot.jl:353; UnionAll(::TypeVar, ::Any)
32	./array.jl:129; vect
31	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:188; build_candidates(::Grammar, ::ProgramState)
31	./strings/io.jl:31; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Int64)
30	./hashing.jl:18; hash
29	./show.jl:568; show(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Int64)
28	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:146; get_variable_candidate(::ProgramState, ::DreamCore.Types.TypeVariable, ::Int64)
26	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:338; #4
26	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:265; unify(::Context, ::DreamCore.Types.TypeVariable, ::TypeConstructor)
25	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:331; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
25	./intfuncs.jl:634; string(::Int64)
25	./event.jl:166; yield
25	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:218; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
25	./boot.jl:350; TypeVar(::Symbol, ::Any)
25	./array.jl:854; push!
24	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:186; build_candidates(::Grammar, ::ProgramState)
24	./array.jl:611; collect(::Base.Generator{Array{Union{TypeConstructor, TypeVariable},1},getfield(DreamCore.Types, Symbol("##1#2"))})
24	./event.jl:169; yield(::Task, ::Any)
23	./task.jl:294; task_done_hook(::Task)
23	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:53; TypeConstructor(::String, ::Array{AbstractType,1})
23	./sysimg.jl:18; getproperty
22	./intfuncs.jl:642; #string#321(::Int64, ::Int64, ::Function, ::Int64)
22	./channels.jl:197; bind
22	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:48; TypeConstructor(::String, ::Array{Union{TypeConstructor, TypeVariable},1}, ::Nothing)
22	./event.jl:199; try_yieldto(::typeof(Base.ensure_rescheduled), ::Base.RefValue{Task})
22	./hashing2.jl:179; hash
21	./strings/io.jl:121; print_to_string(::DreamCore.Types.TypeVariable)
21	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:48; TypeConstructor(::String, ::Array{DreamCore.Types.TypeVariable,1}, ::Nothing)
21	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:47; TypeConstructor(::String, ::Array{AbstractType,1}, ::Nothing)
21	./none:0; (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:sizehint,),Tuple{Int64}}, ::Type{Base.GenericIOBuffer{Array{UInt8,1}}})
21	./array.jl:729; getindex
20	./client.jl:436; _start()
20	./client.jl:267; exec_options(::Base.JLOptions)
20	./sysimg.jl:29; include(::Module, ::String)
20	./loading.jl:1038; include_relative(::Module, ::String)
20	./boot.jl:326; include
20	./channels.jl:109; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##8#10")){Grammar,Bool,DreamCore.Generation.ApplicationState})
20	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:96; to_program_state(::DreamCore.Generation.ApplicationState)
20	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:280; unify(::Context, ::TypeConstructor, ::TypeConstructor)
20	./generator.jl:32; Type
19	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:47; TypeConstructor(::String, ::Array{DreamCore.Types.TypeVariable,1}, ::Nothing)
18	./iterators.jl:138; iterate
18	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:339; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
18	./channels.jl:109; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##3#5")){Grammar,Bool,ProgramState})
17	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:338; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
17	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:244; extend(::Context, ::Int64, ::TypeConstructor)
16	./abstractarray.jl:1866; foreach(::getfield(Base, Symbol("##453#454")){Task}, ::Array{Any,1})
16	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:228; returns(::TypeConstructor)
16	./task.jl:273; register_taskdone_hook(::Task, ::Function)
16	./boot.jl:384; Type
16	./dict.jl:169; hashindex
15	./event.jl:195; try_yieldto(::typeof(Base.ensure_rescheduled), ::Base.RefValue{Task})
15	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:386; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
15	./array.jl:598; _array_for(::Type{TypeConstructor}, ::Array{AbstractType,1}, ::Base.HasShape{1})
15	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:53; TypeConstructor(::String, ::Array{TypeConstructor,1})
15	./iobuffer.jl:31; StringVector
15	./strings/string.jl:60; _string_n
15	./iobuffer.jl:98; #IOBuffer#315
15	./iobuffer.jl:27; Type
15	./iobuffer.jl:20; Type
14	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:122; isequal
14	./intfuncs.jl:570; dec(::UInt64, ::Int64, ::Bool)
14	./dict.jl:546; instantiate
14	./tuple.jl:43; iterate
14	./array.jl:705; apply(::DreamCore.Types.TypeVariable, ::Context)
13	./iterators.jl:141; iterate(::Base.Iterators.Enumerate{Array{AbstractType,1}}, ::Tuple{Int64})
13	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:253; unify(::Context, ::TypeConstructor, ::TypeConstructor)
13	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:379; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
13	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:86; to_app_state1(::DreamCore.Generation.Candidate, ::ProgramState)
13	./dict.jl:283; ht_keyindex(::Dict{String,DreamCore.Types.TypeVariable}, ::String)
13	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:48; TypeConstructor(::String, ::Array{TypeConstructor,1}, ::Nothing)
12	./channels.jl:112; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##8#10")){Grammar,Bool,DreamCore.Generation.ApplicationState})
12	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:272; unify(::Context, ::TypeConstructor, ::DreamCore.Types.TypeVariable)
11	./channels.jl:110; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##8#10")){Grammar,Bool,DreamCore.Generation.ApplicationState})
11	./task.jl:294; (::getfield(Base, Symbol("##453#454")){Task})(::getfield(Base, Symbol("##599#600")){WeakRef})
11	./channels.jl:197; #599
11	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:161; Type
11	./array.jl:611; collect(::Base.Generator{Array{DreamCore.Types.TypeVariable,1},getfield(DreamCore.Types, Symbol("##1#2"))})
10	./channels.jl:111; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##3#5")){Grammar,Bool,ProgramState})
10	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:344; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
10	./strings/io.jl:101; #sprint#340(::Nothing, ::Int64, ::Function, ::Function, ::Array{String,1}, ::Vararg{Any,N} where N)
10	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:247; extend(::Context, ::Int64, ::TypeConstructor)
10	./compiler/typeinfer.jl:14; typeinf(::Core.Compiler.InferenceState)
10	./compiler/abstractinterpretation.jl:1191; typeinf_nocycle(::Core.Compiler.InferenceState)
10	./array.jl:598; _array_for(::Type{DreamCore.Types.TypeVariable}, ::Array{AbstractType,1}, ::Base.HasShape{1})
10	./compiler/abstractinterpretation.jl:890; abstract_eval(::Any, ::Array{Any,1}, ::Core.Compiler.InferenceState)
10	./compiler/abstractinterpretation.jl:805; abstract_eval_call(::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Compiler.InferenceState)
10	./strings/string.jl:39; Type
10	./array.jl:767; setindex!
9	./channels.jl:111; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##8#10")){Grammar,Bool,DreamCore.Generation.ApplicationState})
9	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:211; build_candidates(::Grammar, ::ProgramState)
9	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:162; final_candidates(::Array{DreamCore.Generation.Candidate,1})
9	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:251; unify(::Context, ::TypeConstructor, ::DreamCore.Types.TypeVariable)
9	./compiler/abstractinterpretation.jl:776; abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Compiler.InferenceState)
9	./compiler/abstractinterpretation.jl:85; abstract_call_gf_by_type(::Any, ::Array{Any,1}, ::Any, ::Core.Compiler.InferenceState)
9	./compiler/abstractinterpretation.jl:345; abstract_call_method(::Method, ::Any, ::Core.SimpleVector, ::Core.Compiler.InferenceState)
9	./array.jl:611; collect(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##1#2"))})
9	./array.jl:199; length
8	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:181; build_candidates(::Grammar, ::ProgramState)
8	./channels.jl:109; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##4#6")){Grammar,Bool,DreamCore.Generation.ApplicationState})
8	./channels.jl:236; close_chnl_on_taskdone(::Task, ::WeakRef)
8	./channels.jl:140; close(::Channel{Any})
8	./channels.jl:387; notify_error(::Channel{Any})
8	./channels.jl:112; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##3#5")){Grammar,Bool,ProgramState})
8	./compiler/abstractinterpretation.jl:1135; typeinf_local(::Core.Compiler.InferenceState)
7	./array.jl:611; collect(::Base.Generator{Array{TypeConstructor,1},getfield(DreamCore.Types, Symbol("##1#2"))})
7	./compiler/typeinfer.jl:613; typeinf_ext(::Core.MethodInstance, ::UInt64)
7	./compiler/typeinfer.jl:576; typeinf_ext(::Core.MethodInstance, ::Core.Compiler.Params)
7	./array.jl:449; zeros
7	./array.jl:452; zeros
7	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:199; instantiate
7	./array.jl:611; collect(::Base.Generator{Array{AbstractType,1},typeof(DreamCore.Types.tostr)})
7	./abstractarray.jl:745; Type
7	./abstractarray.jl:745; copyto!
6	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:363; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
6	./array.jl:604; collect(::Base.Generator{Channel{Any},getfield(Main, Symbol("##5#6"))})
6	./array.jl:670; grow_to!(::Array{Any,1}, ::Base.Generator{Channel{Any},getfield(Main, Symbol("##5#6"))})
6	./array.jl:611; collect(::Base.Generator{Array{DreamCore.Generation.Candidate,1},getfield(DreamCore.Generation, Symbol("##1#2"))})
6	./boot.jl:402; _array_for
6	./task.jl:272; register_taskdone_hook(::Task, ::Function)
6	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:111; hash(::TypeConstructor, ::UInt64)
6	./int.jl:428; <=
6	./intfuncs.jl:577; dec(::UInt64, ::Int64, ::Bool)
6	./strings/io.jl:125; print_to_string(::DreamCore.Types.TypeVariable)
6	./strings/io.jl:125; print_to_string(::String, ::Vararg{Any,N} where N)
6	./array.jl:610; collect(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}})
6	./iobuffer.jl:409; unsafe_write(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Ptr{UInt8}, ::UInt64)
6	./event.jl:187; try_yieldto(::typeof(Base.ensure_rescheduled), ::Base.RefValue{Task})
5	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:132; get_candidate(::ProgramState, ::DreamCore.Grammars.Production)
5	./iterators.jl:139; iterate(::Base.Iterators.Enumerate{Array{AbstractType,1}}, ::Tuple{Int64})
5	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:252; unify(::Context, ::DreamCore.Types.TypeVariable, ::TypeConstructor)
5	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:98; to_program_state(::DreamCore.Generation.ApplicationState)
5	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:245; extend(::Context, ::Int64, ::TypeConstructor)
5	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:323; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
5	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:324; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
5	./channels.jl:260; put!
5	./channels.jl:50; Channel{Any}(::Int64)
5	./task.jl:143; get_task_tls
5	./abstractdict.jl:527; Type
5	./abstractdict.jl:509; Type
5	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:334; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
5	./intfuncs.jl:415; ndigits0z(::UInt64)
5	./tuple.jl:0; print_to_string(::String, ::Vararg{Any,N} where N)
5	./array.jl:606; collect(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##9#10")){Int64}})
5	./array.jl:896; extend(::Context, ::Int64, ::TypeConstructor)
5	./strings/io.jl:117; print_to_string(::String, ::Vararg{Any,N} where N)
5	./channels.jl:280; put_unbuffered(::Channel{Any}, ::DreamCore.Generation.Result)
5	./array.jl:1009; resize!
5	./array.jl:821; _deleteend!
5	./dict.jl:477; getindex
5	./array.jl:855; push!
5	./strings/io.jl:167; print
5	./strings/io.jl:165; write
5	./gcutils.jl:87; macro expansion
5	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:152; function_arguments(::TypeConstructor)
5	./compiler/typeinfer.jl:497; typeinf_edge(::Method, ::Any, ::Core.SimpleVector, ::Core.Compiler.InferenceState)
5	./event.jl:256; wait()
5	./libuv.jl:100; process_events
5	./generator.jl:44; iterate(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}})
4	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:385; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
4	./channels.jl:112; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##4#6")){Grammar,Bool,DreamCore.Generation.ApplicationState})
4	./task.jl:295; task_done_hook(::Task)
4	./task.jl:309; task_done_hook(::Task)
4	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:109; hash(::TypeConstructor, ::UInt64)
4	./abstractarray.jl:788; copyto!(::Array{Tuple{Int64,Union{TypeConstructor, TypeVariable}},1}, ::Int64, ::Array{Tuple{Int64,AbstractType},1}, ::Int64, ::Int64)
4	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:178; build_candidates(::Grammar, ::ProgramState)
4	./dict.jl:280; ht_keyindex(::Dict{String,DreamCore.Types.TypeVariable}, ::String)
4	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:216; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
4	./generator.jl:47; iterate(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##9#10")){Int64}})
4	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:195; build_candidates(::Grammar, ::ProgramState)
4	./channels.jl:332; take_unbuffered(::Channel{Any})
4	./gcutils.jl:87; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::String)
4	./generator.jl:44; iterate
4	./generator.jl:47; iterate
3	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:362; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
3	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:238; unify(::Context, ::DreamCore.Types.TypeVariable, ::TypeConstructor)
3	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:265; unify(::Context, ::DreamCore.Types.TypeVariable, ::DreamCore.Types.TypeVariable)
3	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:175; build_candidates(::Grammar, ::ProgramState)
3	./float.jl:448; ==
3	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:150; function_arguments(::TypeConstructor)
3	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:153; function_arguments(::TypeConstructor)
3	./channels.jl:111; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##4#6")){Grammar,Bool,DreamCore.Generation.ApplicationState})
3	./compiler/typeinfer.jl:488; typeinf_edge(::Method, ::Any, ::Core.SimpleVector, ::Core.Compiler.InferenceState)
3	./compiler/inferencestate.jl:120; Core.Compiler.InferenceState(::Core.Compiler.InferenceResult, ::Bool, ::Core.Compiler.Params)
3	./compiler/inferencestate.jl:54; Core.Compiler.InferenceState(::Core.Compiler.InferenceResult, ::Core.CodeInfo, ::Bool, ::Core.Compiler.Params)
3	./boot.jl:419; Type
3	./channels.jl:230; close_chnl_on_taskdone(::Task, ::WeakRef)
3	./channels.jl:378; notify_error(::Channel{Any}, ::InvalidStateException)
3	./event.jl:79; notify_error
3	./event.jl:71; notify(::Condition, ::InvalidStateException, ::Bool, ::Bool)
3	./channels.jl:383; notify_error(::Channel{Any}, ::InvalidStateException)
3	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:170; build_candidates(::Grammar, ::ProgramState)
3	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:130; get_candidate(::ProgramState, ::DreamCore.Grammars.Production)
3	./gcutils.jl:87; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::DreamCore.Types.TypeVariable)
3	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:113; hash(::TypeConstructor, ::UInt64)
3	./array.jl:895; append!
3	./strings/io.jl:272; join(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{String,1}, ::String)
3	./iobuffer.jl:320; ensureroom
3	./event.jl:199; try_yieldto(::getfield(Base, Symbol("##612#614")){Channel{Any}}, ::Base.RefValue{Task})
3	./iterators.jl:141; iterate(::Base.Iterators.Enumerate{Array{AbstractType,1}}, ::Tuple{Int64,Int64})
3	./operators.jl:83; ==
3	./promotion.jl:403; ==
3	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:212; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
3	./iobuffer.jl:420; unsafe_write(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Ptr{UInt8}, ::UInt64)
3	./sysimg.jl:19; setproperty!
3	./array.jl:606; collect(::Base.Generator{Array{Union{TypeConstructor, TypeVariable},1},getfield(DreamCore.Types, Symbol("##1#2"))})
3	./array.jl:630; collect_to_with_first!
3	./array.jl:651; collect_to!
3	./strings/string.jl:85; sizeof
3	./array.jl:658; collect_to!(::Array{DreamCore.Types.TypeVariable,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
3	./array.jl:659; collect_to!(::Array{DreamCore.Types.TypeVariable,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
3	./none:0; #1
3	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:157; function_arguments(::TypeConstructor)
3	/Applications/Julia-1.1.app/Contents/Resources/julia/lib/julia/sys.dylib:?; collect(::Base.Generator{Array{Tuple{Pkg.Types.PackageSpec,String},1},getfield(Pkg.Operations, Symbol("##24#27"))})
3	./event.jl:253; wait()
2	./channels.jl:260; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
2	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:361; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
2	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:172; build_candidates(::Grammar, ::ProgramState)
2	./int.jl:427; <
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:204; instantiate
2	./array.jl:662; collect_to!(::Array{DreamCore.Types.TypeVariable,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:119; hash
2	./float.jl:565; hash
2	./float.jl:561; hx
2	./hashing.jl:62; hash_uint64
2	./hashing.jl:31; hash_64_64
2	./operators.jl:502; +
2	./int.jl:53; +
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:246; extend(::Context, ::Int64, ::TypeConstructor)
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:135; tostr(::TypeConstructor)
2	./array.jl:653; collect_to!(::Array{TypeConstructor,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:0; get_candidate(::ProgramState, ::DreamCore.Grammars.Production)
2	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:150; get_variable_candidate(::ProgramState, ::DreamCore.Types.TypeVariable, ::Int64)
2	./array.jl:854; push!(::Array{Union{TypeConstructor, TypeVariable},1}, ::TypeConstructor)
2	./event.jl:168; yield(::Task, ::Any)
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:252; unify(::Context, ::DreamCore.Types.TypeVariable, ::DreamCore.Types.TypeVariable)
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:155; function_arguments(::TypeConstructor)
2	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:319; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
2	./event.jl:18; Type
2	./channels.jl:110; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##4#6")){Grammar,Bool,DreamCore.Generation.ApplicationState})
2	./channels.jl:143; isopen(::Channel{Any})
2	./abstractarray.jl:863; isempty
2	./channels.jl:384; notify_error(::Channel{Any}, ::InvalidStateException)
2	./abstractarray.jl:1866; foreach(::getfield(Base, Symbol("##617#619")){InvalidStateException}, ::Array{Task,1})
2	./array.jl:729; getindex(::Array{Tuple{Int64,AbstractType},1}, ::Int64)
2	./channels.jl:287; put_unbuffered(::Channel{Any}, ::DreamCore.Generation.Result)
2	./channels.jl:121; isbuffered
2	./abstractarray.jl:755; copyto!(::IndexLinear, ::Array{Union{TypeConstructor, TypeVariable},1}, ::IndexLinear, ::Array{Any,1})
2	./strings/io.jl:113; print_to_string(::String, ::Vararg{Any,N} where N)
2	./gcutils.jl:87; show(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Int64)
2	./iobuffer.jl:414; unsafe_write(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Ptr{UInt8}, ::UInt64)
2	./intfuncs.jl:0; #string#321(::Int64, ::Int64, ::Function, ::Int64)
2	./intfuncs.jl:569; dec(::UInt64, ::Int64, ::Bool)
2	./none:0; #ndigits
2	./intfuncs.jl:540; #ndigits#320
2	./promotion.jl:414; max
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:202; instantiate
2	./dict.jl:382; setindex!(::Dict{String,DreamCore.Types.TypeVariable}, ::DreamCore.Types.TypeVariable, ::String)
2	./dict.jl:309; ht_keyindex2!(::Dict{String,DreamCore.Types.TypeVariable}, ::String)
2	./abstractarray.jl:749; copyto!(::IndexLinear, ::Array{Union{TypeConstructor, TypeVariable},1}, ::IndexLinear, ::Array{Any,1})
2	./iobuffer.jl:317; ensureroom
2	./strings/io.jl:167; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::String)
2	./array.jl:601; collect(::Base.Generator{Array{Union{TypeConstructor, TypeVariable},1},getfield(DreamCore.Types, Symbol("##1#2"))})
2	./strings/string.jl:85; is_arrow
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:177; apply(::TypeConstructor, ::Context)
2	./abstractarray.jl:753; copyto!(::IndexLinear, ::Array{AbstractType,1}, ::IndexLinear, ::Array{DreamCore.Types.TypeVariable,1})
2	./array.jl:601; collect(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}})
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:238; unify(::Context, ::TypeConstructor, ::DreamCore.Types.TypeVariable)
2	./array.jl:649; collect_to!(::Array{TypeConstructor,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
2	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:47; TypeConstructor(::String, ::Array{TypeConstructor,1}, ::Nothing)
2	./array.jl:860; push!(::Array{Any,1}, ::Any)
2	./event.jl:90; enq_work
2	./event.jl:186; try_yieldto(::typeof(Base.ensure_rescheduled), ::Base.RefValue{Task})
2	./channels.jl:328; take_unbuffered(::Channel{Any})
2	./strings/io.jl:167; print(::Base.PipeEndpoint, ::String)
2	./channels.jl:341; take_unbuffered(::Channel{Any})
2	./channels.jl:397; iterate(::Channel{Any}, ::Nothing)
2	./channels.jl:342; take_unbuffered(::Channel{Any})
2	./error.jl:51; rethrow()
2	./compiler/abstractinterpretation.jl:1121; typeinf_local(::Core.Compiler.InferenceState)
2	./compiler/typeinfer.jl:72; typeinf(::Core.Compiler.InferenceState)
1	./abstractarray.jl:755; copyto!(::IndexLinear, ::Array{AbstractType,1}, ::IndexLinear, ::Array{DreamCore.Types.TypeVariable,1})
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:356; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:274; debug_state
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:47; convert_arrow(::ProgramState)
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:51; convert_arrow(::ProgramState)
1	./channels.jl:109; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##7#9")){Grammar,Bool,ProgramState})
1	./channels.jl:110; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##7#9")){Grammar,Bool,ProgramState})
1	./channels.jl:112; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##7#9")){Grammar,Bool,ProgramState})
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:365; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
1	./int.jl:0; build_candidates(::Grammar, ::ProgramState)
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:169; build_candidates(::Grammar, ::ProgramState)
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:131; get_candidate(::ProgramState, ::DreamCore.Grammars.Production)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:213; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
1	./iobuffer.jl:112; #IOBuffer#316(::Bool, ::Bool, ::Nothing, ::Bool, ::Int64, ::Int64, ::Type)
1	./dict.jl:0; ht_keyindex(::Dict{String,DreamCore.Types.TypeVariable}, ::String)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:0; instantiate(::TypeConstructor, ::Context, ::Dict{String,DreamCore.Types.TypeVariable})
1	./iobuffer.jl:318; ensureroom
1	./iobuffer.jl:411; unsafe_write(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Ptr{UInt8}, ::UInt64)
1	./int.jl:52; -
1	./strings/io.jl:29; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Int64)
1	./int.jl:49; <
1	/Applications/Julia-1.1.app/Contents/Resources/julia/lib/julia/sys.dylib:?; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Int64)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:203; instantiate
1	./intfuncs.jl:641; #string#321(::Int64, ::Int64, ::Function, ::Int64)
1	./int.jl:49; split_sign
1	./dict.jl:284; ht_keyindex(::Dict{String,DreamCore.Types.TypeVariable}, ::String)
1	./int.jl:434; <
1	./operators.jl:333; >=
1	./array.jl:629; collect_to_with_first!
1	./reducedim.jl:657; any
1	./reducedim.jl:657; #any#558
1	./reducedim.jl:659; _any
1	./reduce.jl:615; _any
1	./abstractarray.jl:749; copyto!(::IndexLinear, ::Array{AbstractType,1}, ::IndexLinear, ::Array{Union{TypeConstructor, TypeVariable},1})
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:92; is_arrow
1	./reduce.jl:0; (::getfield(DreamCore.Types, Symbol("##9#10")){Int64})(::TypeConstructor)
1	./abstractarray.jl:75; axes
1	./tuple.jl:165; map
1	./range.jl:317; Type
1	./range.jl:308; Type
1	./array.jl:608; collect(::Base.Generator{Array{TypeConstructor,1},getfield(DreamCore.Types, Symbol("##1#2"))})
1	./abstractarray.jl:0; copyto!(::IndexLinear, ::Array{AbstractType,1}, ::IndexLinear, ::Array{DreamCore.Types.TypeVariable,1})
1	./abstractarray.jl:749; copyto!(::IndexLinear, ::Array{Tuple{Int64,AbstractType},1}, ::IndexLinear, ::Array{Tuple{Int64,Union{TypeConstructor, TypeVariable}},1})
1	./abstractarray.jl:782; copyto!(::Array{Tuple{Int64,Union{TypeConstructor, TypeVariable}},1}, ::Int64, ::Array{Tuple{Int64,AbstractType},1}, ::Int64, ::Int64)
1	./strings/io.jl:108; tostr_sizehint(::String)
1	./iobuffer.jl:415; unsafe_write(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Ptr{UInt8}, ::UInt64)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:0; tostr(::TypeConstructor)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:131; tostr(::TypeConstructor)
1	./intfuncs.jl:512; ndigits0z
1	./intfuncs.jl:0; ndigits0zpb(::UInt64, ::Int64)
1	./strings/io.jl:269; join(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{String,1}, ::String)
1	./strings/substring.jl:177; string(::String, ::String, ::Vararg{String,N} where N)
1	./strings/substring.jl:182; string(::String, ::String, ::Vararg{String,N} where N)
1	./tuple.jl:24; getindex
1	./strings/io.jl:35; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::TypeConstructor)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:253; unify(::Context, ::DreamCore.Types.TypeVariable, ::TypeConstructor)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:245; extend(::Context, ::Int64, ::DreamCore.Types.TypeVariable)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:246; extend(::Context, ::Int64, ::DreamCore.Types.TypeVariable)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:247; extend(::Context, ::Int64, ::DreamCore.Types.TypeVariable)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:0; apply(::DreamCore.Types.TypeVariable, ::Context)
1	./array.jl:641; setindex_widen_up_to
1	./abstractarray.jl:782; copyto!(::Array{AbstractType,1}, ::Int64, ::Array{DreamCore.Types.TypeVariable,1}, ::Int64, ::Int64)
1	./generator.jl:43; iterate(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}})
1	./array.jl:649; collect_to!(::Array{DreamCore.Types.TypeVariable,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
1	./generator.jl:45; iterate(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:42; split_arguments(::Array{TypeConstructor,1})
1	./array.jl:606; collect(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##1#2"))})
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:48; TypeConstructor(::String, ::Array{AbstractType,1}, ::Nothing)
1	./array.jl:655; collect_to!(::Array{TypeConstructor,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##3#4")){Context}}, ::Int64, ::Int64)
1	./array.jl:640; setindex_widen_up_to
1	./array.jl:314; similar
1	./array.jl:642; setindex_widen_up_to
1	./array.jl:630; collect_to_with_first!(::Array{Bool,1}, ::Bool, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##1#2"))}, ::Int64)
1	./array.jl:651; collect_to!(::Array{Bool,1}, ::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##1#2"))}, ::Int64, ::Int64)
1	./array.jl:601; collect(::Base.Generator{Array{DreamCore.Types.TypeVariable,1},getfield(DreamCore.Types, Symbol("##1#2"))})
1	./abstractarray.jl:750; copyto!(::IndexLinear, ::Array{AbstractType,1}, ::IndexLinear, ::Array{DreamCore.Types.TypeVariable,1})
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:176; build_candidates(::Grammar, ::ProgramState)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:275; unify(::Context, ::DreamCore.Types.TypeVariable, ::TypeConstructor)
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:192; build_candidates(::Grammar, ::ProgramState)
1	/Users/lcary/w/mit/DreamCore.jl/src/utils.jl:26; lse(::Array{Float64,1})
1	/Users/lcary/w/mit/DreamCore.jl/src/utils.jl:29; lse(::Array{Float64,1})
1	./reducedim.jl:648; maximum
1	./reducedim.jl:648; #maximum#554
1	./reducedim.jl:652; _maximum
1	./reducedim.jl:653; _maximum
1	./reducedim.jl:304; mapreduce
1	./reducedim.jl:304; #mapreduce#548
1	./reducedim.jl:308; _mapreduce_dim
1	./reduce.jl:320; _mapreduce(::typeof(identity), ::typeof(max), ::IndexLinear, ::Array{Float64,1})
1	./reduce.jl:464; mapreduce_impl
1	./math.jl:575; max
1	/Users/lcary/w/mit/DreamCore.jl/src/utils.jl:30; lse(::Array{Float64,1})
1	./special/log.jl:0; log(::Float64)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:151; function_arguments(::TypeConstructor)
1	./channels.jl:53; Channel{Any}(::Int64)
1	/Applications/Julia-1.1.app/Contents/Resources/julia/lib/julia/sys.dylib:?; Channel{Any}(::Int64)
1	./abstractdict.jl:646; get!(::IdDict{Any,Any}, ::Any, ::Any)
1	./abstractdict.jl:588; setindex!
1	./event.jl:89; enq_work
1	./event.jl:240; poptask()
1	./refpointer.jl:82; Type
1	./refvalue.jl:10; Type
1	./refvalue.jl:8; Type
1	./array.jl:2346; filter!(::getfield(Base, Symbol("##613#615")), ::Array{Task,1})
1	./array.jl:1179; deleteat!
1	./checked.jl:132; length
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:383; generator(::Channel{Any}, ::Grammar, ::ProgramState, ::Bool)
1	./strings/io.jl:30; print(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Int64)
1	/Users/lcary/w/mit/DreamCore.jl/src/types.jl:126; tostr(::TypeConstructor)
1	./channels.jl:394; iterate(::Channel{Any}, ::Nothing)
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:317; appgenerator(::Channel{Any}, ::Grammar, ::DreamCore.Generation.ApplicationState, ::Bool)
1	./event.jl:258; wait()
1	./channels.jl:110; #Channel#596(::Type, ::Int64, ::Nothing, ::Type, ::getfield(DreamCore.Generation, Symbol("##3#5")){Grammar,Bool,ProgramState})
1	/Applications/Julia-1.1.app/Contents/Resources/julia/lib/julia/sys.dylib:?; iterate(::Base.EachLine{IOStream}, ::Nothing)
1	/Users/lcary/w/mit/DreamCore.jl/src/generation.jl:247; is_symmetrical(::DreamCore.Generation.ApplicationState, ::Program, ::Dict{String,Primitive})
1	./dict.jl:546; haskey(::Dict{String,Primitive}, ::String)
1	./dict.jl:283; ht_keyindex(::Dict{String,Primitive}, ::String)
1	./channels.jl:52; Channel{Any}(::Int64)
1	./event.jl:230; poptask()
1	./event.jl:187; try_yieldto(::getfield(Base, Symbol("##612#614")){Channel{Any}}, ::Base.RefValue{Task})
1	./compiler/abstractinterpretation.jl:107; abstract_call_gf_by_type(::Any, ::Array{Any,1}, ::Any, ::Core.Compiler.InferenceState)
1	./compiler/abstractinterpretation.jl:198; abstract_call_method_with_const_args(::Any, ::Any, ::Array{Any,1}, ::Core.SimpleVector, ::Core.Compiler.InferenceState)
1	./compiler/typeinfer.jl:35; typeinf(::Core.Compiler.InferenceState)
1	./compiler/optimize.jl:164; optimize(::Core.Compiler.OptimizationState, ::Any)
1	./compiler/ssair/driver.jl:114; run_passes(::Core.CodeInfo, ::Int64, ::Core.Compiler.OptimizationState)
1	./compiler/ssair/driver.jl:109; just_construct_ssa(::Core.CodeInfo, ::Array{Any,1}, ::Int64, ::Core.Compiler.OptimizationState)
1	./compiler/ssair/slot2ssa.jl:859; construct_ssa!(::Core.CodeInfo, ::Array{Any,1}, ::Core.Compiler.IRCode, ::Core.Compiler.DomTree, ::Array{Core.Compiler.SlotInfo,1}, ::Int64, ::Core.SimpleVector, ::Array{Any,1})
1	./compiler/ssair/slot2ssa.jl:98; new_to_regular(::Any, ::Int64)
1	./compiler/ssair/ir.jl:392; iterate(::Core.Compiler.UseRefIterator, ::Nothing)
1	./compiler/abstractinterpretation.jl:722; abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Compiler.InferenceState)
1	./compiler/tfuncs.jl:1333; return_type_tfunc(::Array{Any,1}, ::Array{Any,1}, ::Core.Compiler.InferenceState)
1	./compiler/abstractinterpretation.jl:776; abstract_call(::Any, ::Tuple{}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Compiler.InferenceState)
1	./compiler/typeinfer.jl:197; store_backedges(::Core.Compiler.InferenceState)
1	./compiler/typeinfer.jl:473; typeinf_edge(::Method, ::Any, ::Core.SimpleVector, ::Core.Compiler.InferenceState)
1	./compiler/typeinfer.jl:194; store_backedges(::Core.Compiler.InferenceState)
1	./generator.jl:43; iterate(::Base.Generator{Array{AbstractType,1},getfield(DreamCore.Types, Symbol("##9#10")){Int64}})
1	./task.jl:293; task_done_hook(::Task)
1	./abstractdict.jl:17; haskey(::IdDict{Any,Any}, ::Symbol)
1	./array.jl:1531; vcat(::Array{Task,1}, ::Array{Task,1})
1	./array.jl:1535; vcat(::Array{Task,1}, ::Array{Task,1})
1	./channels.jl:384; #617
1	./none:0; #schedule
1	./event.jl:134; #schedule#443
1	./task.jl:308; task_done_hook(::Task)
1	./event.jl:244; wait()
1	./event.jl:229; poptask()
1	./array.jl:1126; popfirst!